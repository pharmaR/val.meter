% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_resource.R
\name{cran_repo_resource}
\alias{cran_repo_resource}
\title{Package CRAN Repository Resource Class}
\usage{
cran_repo_resource(
  package = NA_character_,
  version = NA_character_,
  id = next_id(),
  md5 = NA_character_,
  repo = character(0)
)
}
\arguments{
\item{package}{\code{character(1L)} Package name. Optional, but should be
provided if possible.}

\item{version}{\code{character(1L)} Package version, provided as a string.}

\item{id}{\code{integer(1L)} optional id used for tracking resources
throughout execution. Generally not provided directly, as new objects
automatically get a unique identifier. For example, the package source
code from a \code{\link[=repo_resource]{repo_resource()}} may be downloaded to add a
\code{\link[=archive_source_resource]{archive_source_resource()}} and add it to a new \code{\link[=multi_resource]{multi_resource()}}.
Because all of these represent the same package, they retain the same
\code{id}. Primarily the \code{id} is used for isolating temporary files.}

\item{md5}{\code{character(1L)} md5 digest of the package source code tarball.
This is not generally provided directly, but is instead derived when
acquiring resources.}

\item{repo}{\code{character(1L)} The repository url from which the package
is to be sourced.}
}
\description{
A reference to a listing in CRAN. CRAN Resources must be from one of the
repositories listed in \code{\link[=getCRANmirrors]{getCRANmirrors()}}. To assert that a new url is
also a CRAN mirror, please follow instructions in \code{\link[=?getCRANmirrors]{?getCRANmirrors()}}.
}
\seealso{
Other resources: 
\code{\link{git_resource}()},
\code{\link{install_resource}()},
\code{\link{local_resource}()},
\code{\link{local_source_resource}()},
\code{\link{mock_resource}()},
\code{\link{multi_resource}()},
\code{\link{remote_source_resource}()},
\code{\link{repo_resource}()},
\code{\link{resource}()},
\code{\link{source_archive_resource}()},
\code{\link{source_code_resource}()},
\code{\link{unknown_resource}()}
}
\concept{resources}
