% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generic_metric_coerce.R
\name{metric_coerce}
\alias{metric_coerce}
\title{Metric Coerce}
\usage{
metric_coerce(from, to, ...)
}
\arguments{
\item{from}{An S7 object to convert.}

\item{to}{An S7 class specification, passed to \code{\link[S7:as_class]{as_class()}}.}

\item{...}{Other arguments passed to custom \code{convert()} methods. For upcasting,
these can be used to override existing properties or set new ones.}
}
\description{
Nearly identical to \code{\link[S7:convert]{S7::convert()}}, but with a few additional helpers for
handling conversions between atomic types that are not implemented by
convert.
}
\note{
We avoid using \code{\link[S7:convert]{S7::convert()}} directly to avoid \emph{type piracy} - defining
methods for signatures we don't control for generics we didn't create.
Since we created neither the \code{convert} generic, nor the base classes we
want to implement it for, we instead create our own generic to avoid
inadvertently affecting others' code.
}
