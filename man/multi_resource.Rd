% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_resource.R
\name{multi_resource}
\alias{multi_resource}
\title{A Resource Collection}
\usage{
multi_resource(
  package = NA_character_,
  version = NA_character_,
  id = next_id(),
  md5 = NA_character_,
  resources = list()
)
}
\arguments{
\item{package}{\code{character(1L)} Package name. Optional, but should be
provided if possible.}

\item{version}{\code{character(1L)} Package version, provided as a string.}

\item{id}{\code{integer(1L)} optional id used for tracking resources
throughout execution. Generally not provided directly, as new objects
automatically get a unique identifier. For example, the package source
code from a \code{\link[=repo_resource]{repo_resource()}} may be downloaded to add a
\code{\link[=source_archive_resource]{source_archive_resource()}} and add it to a new \code{\link[=multi_resource]{multi_resource()}}.
Because all of these represent the same package, they retain the same
\code{id}. Primarily the \code{id} is used for isolating temporary files.}

\item{md5}{\code{character(1L)} md5 digest of the package source code tarball.
This is not generally provided directly, but is instead derived when
acquiring resources.}

\item{resources}{\code{list} of \code{\link{resource}}s}
}
\description{
The \code{\link{multi_resource}} can be used to permit sourcing package information
from multiple resources.
}
\details{
Most prominently, these are exposed when a \code{\link[=pkg]{pkg()}} is assumed from a
character value. With only a package name, \code{val.meter} will search for
resources from acceptable sources according to your \code{\link{policy}}. If
more than one acceptable resource is discovered, they are combined into
a \code{\link{multi_resource}}.

During data derivation, each of the bundled resources is used to attempt
to derive package data. The package only raises an error when no resource
can successfully derive the expected data.
}
\seealso{
Other resources: 
\code{\link{cran_repo_resource}()},
\code{\link{git_resource}()},
\code{\link{install_resource}()},
\code{\link{local_resource}()},
\code{\link{local_source_resource}()},
\code{\link{mock_resource}()},
\code{\link{remote_resource}()},
\code{\link{repo_resource}()},
\code{\link{resource}()},
\code{\link{source_archive_resource}()},
\code{\link{source_code_resource}()},
\code{\link{unknown_resource}()}
}
\concept{resources}
