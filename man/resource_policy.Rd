% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_resource_policy.R
\name{resource_policy}
\alias{resource_policy}
\title{Package Resource Policy Class}
\usage{
resource_policy(
  accepted_resources = list(
    source_archive_resource,
    source_code_resource,
    install_resource
  ), 
  source_resources = list(repo_resource),
  scopes = permissions(FALSE)
)
}
\arguments{
\item{accepted_resources}{A list of resources types to permit. Ordered by
priority, highest to lowest.}

\item{source_resources}{A list of additional resource types, which may be
used to discover a resource of an accepted type. For example, even if
only \code{\link[=archive_source_resource]{archive_source_resource()}}s are accepted, a \code{\link[=repo_resource]{repo_resource()}}
could be used as a means of acquiring the archive source, so long as it
can be \code{\link[S7:convert]{S7::convert()}}ed into a \code{\link[=archive_source_resource]{archive_source_resource()}}.}

\item{scopes}{Behavioral scopes provided for resource acquisition. For
example, downloading and installing source code for more accurate
metric evaluation requires the \code{"network"} and \code{"write"} scopes.}
}
\description{
A descriptor of how package resources should be discovered, indicating
which types of package resources should be considered and how they must be
used to produce consistently sourced information.
}
\details{
The resource policy takes effect when packages are passed to \code{\link[=pkg]{pkg()}},
limiting how package resources can be discovered. A resource policy can
be applied globally using provided \code{\link{options}}.
}
\examples{
# discover our locally installed file path, create `pkg` from `local_resource`
pkg(find.package("val.meter"))

# disable local resource discovery
options(val.meter.policy = resource_policy(
  accepted_resources = list(source_archive_resource)
))

# expect error - unable to discover resource
tryCatch(
  pkg(find.package("val.meter")),
  error = function(error, ...) message(error$message)
)

}
\keyword{safeguard}
